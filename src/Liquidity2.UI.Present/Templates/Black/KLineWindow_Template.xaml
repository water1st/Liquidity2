<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:klin="clr-namespace:Liquidity2.UI.Components.KLine;assembly=Liquidity2.UI.Components"
                    xmlns:userControl="clr-namespace:Liquidity2.UI.Components.UsersControl;assembly=Liquidity2.UI.Components"
                    xmlns:volume="clr-namespace:Liquidity2.UI.Components.Volume;assembly=Liquidity2.UI.Components"
                    xmlns:local="clr-namespace:Liquidity2.UI.Core;assembly=Liquidity2.UI.Core"
                    xmlns:convert="clr-namespace:Liquidity2.UI.Present.Windows.Kline;assembly=Liquidity2.UI.Present">

    <Style BasedOn="{StaticResource MainWindow_Style}" x:Key="KLineWindow_Style" TargetType="{x:Type local:WindowBase}">
        <Style.Resources>
            <Style x:Key="KlineWindowFinfoBarSymbolStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="FontFamily" Value="MicrosoftYaHei"/>
            </Style>

            <Style x:Key="KlineWindowFinfoBarCurrentPriceStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="FontFamily" Value="MicrosoftYaHei"/>
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Margin" Value="10,0,10,0" />
            </Style>

            <Style x:Key="KlineWindowFinfoBarCurrentLocalPriceStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="FontFamily" Value="MicrosoftYaHei"/>
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Opacity" Value="0.4" />
                <Setter Property="Margin" Value="10,0,10,0" />
            </Style>

            <Style x:Key="KlineWindowFinfoBarInfosHeadStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#AABDFF" />
                <Setter Property="FontFamily" Value="MicrosoftYaHei"/>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Opacity" Value="0.4" />
            </Style>

            <Style x:Key="KlineWindowFinfoBarInfosBodyStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#FFFFFF " />
                <Setter Property="FontFamily" Value="MicrosoftYaHei"/>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Opacity" Value="0.9" />
            </Style>

            <Style x:Key="KlineWindowBorderyStyle" TargetType="{x:Type Border}">
                <Setter Property="Background"  Value="Black"/>
            </Style>

            <Style x:Key="StarBtn" TargetType="{x:Type Button}">
                <Setter Property="Command" Value="{Binding DataContext.KLineVM.StarButtonClickCmd,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Canvas>
                                <Path Fill="{TemplateBinding Background}" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                    <Path.Data>
                                        <GeometryGroup>
                                            <PathGeometry FillRule="EvenOdd" Figures="M3.0245567,11.9180448 C2.79578028,12.0429034 2.52228069,12.022022 2.3119218,11.8636359 C2.10538194,11.7098072 2.0000472,11.4400391 2.04197736,11.1722934 L2.55008097,8.07747531 C2.58693346,7.84785977 2.51368915,7.61325259 2.35338084,7.45102422 L0.203499082,5.25969332 C0.0202041007,5.07494769 -0.0464498483,4.79111969 0.0330563451,4.53390855 C0.116567206,4.27411015 0.328132992,4.08754156 0.579855071,4.05171592 L3.55108656,3.59997231 C3.77220146,3.56652831 3.96291306,3.42127152 4.06149346,3.21212172 L5.38910418,0.395837222 C5.50334688,0.153742578 5.73920277,0 5.99717016,0 C6.2555982,0 6.49191475,0.153742578 6.60523614,0.395837222 L7.93376817,3.21212172 C8.03234857,3.42177069 8.22306017,3.56652831 8.44371441,3.59997231 L11.4154066,4.05171592 C11.6673025,4.08736508 11.8790814,4.27396444 11.9626659,4.53390855 C12.0423594,4.7899798 11.9764856,5.07150841 11.7917625,5.25969332 L9.64003816,7.45102422 C9.48176267,7.61104461 9.40895472,7.84697605 9.44656262,8.07797447 L9.9551269,11.1722934 C9.9975339,11.4406367 9.89194276,11.7111855 9.6847218,11.8651334 C9.47377778,12.0236239 9.19959702,12.0439417 8.97070493,11.9180448 L6.31271955,10.4584886 C6.11442257,10.3500244 5.8803784,10.3500244 5.68208142,10.4584886 L3.0245567,11.9180448 Z"/>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <!--鼠标经过高亮-->
                                <Trigger Property="Button.IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MarketDepthBtn" TargetType="{x:Type RadioButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Border BorderThickness="1"  CornerRadius="3" Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" Margin="0,1.5,0,0"  VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" Value="#1564F7"/>
                                    <Setter Property="Foreground" Value="#C8DBFD"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter Property="Background" Value="#00010A"/>
                                    <Setter Property="Foreground" Value="#A2A3AA"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontFamily" Value="MicrosoftYaHei"/>
                <Setter Property="Background" Value="Black"/>
            </Style>

            <Style x:Key="TimeBtn" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="#171B2B"/>
                <Setter Property="Foreground" Value="#A2A3AA"/>
                <Setter Property="Width" Value="49"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#25315A"/>
                        <Setter Property="Foreground" Value="#FFFFFF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TimeMenuRadio" TargetType="{x:Type RadioButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <StackPanel Width="49" Height="20" Orientation="Horizontal" Background="{Binding Background}">
                                <TextBlock Height="14" Width="22" Text="{Binding Text}" FontSize="10" Margin="8,3,0,0" VerticalAlignment="Center"   TextAlignment="Center" FontFamily="MicrosoftYaHei"/>
                                <Canvas HorizontalAlignment="Center" Width="7" Height="5" VerticalAlignment="Center" Margin="2,1,0,0">
                                    <Path StrokeThickness="0" Stroke="#A7ACBD"  >
                                        <Path.Data>
                                            <GeometryGroup>
                                                <PathGeometry FillRule="EvenOdd" Figures="M6.26491557,0.856285178 L3.52870544,3.84840525 C3.44694979,3.94143056 3.32909873,3.99475065 3.20525328,3.99474672 C3.08142589,3.99474672 2.96360225,3.94146341 2.88180113,3.84840525 L0.145590994,0.856285178 C0.0120075047,0.715196998 -0.0292682927,0.50956848 0.0397748593,0.327954972 C0.108818011,0.146341463 0.275422139,0.0195121951 0.469043152,0.00225140713 L5.93921201,0.00225140713 C6.13358349,0.0187617261 6.30093809,0.144840525 6.36998124,0.327204503 C6.43977486,0.50956848 6.39849906,0.714446529 6.26491557,0.856285178 Z"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                <GradientStop Color="#A7ACBD"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Canvas>
                                <Popup HorizontalOffset="-1" Margin="0" Placement="Bottom" IsOpen="{Binding PopupOpen, RelativeSource={RelativeSource AncestorType=userControl:DropDownRadioButton}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" StaysOpen="False" AllowsTransparency="True">
                                    <StackPanel Margin="0" Background="Transparent" Orientation="Vertical" >
                                        <ListBox BorderThickness="0" Padding="0" Margin="0" Background="Transparent" HorizontalContentAlignment="Stretch"  ItemsSource="{Binding ListData, RelativeSource={RelativeSource AncestorType=userControl:DropDownRadioButton}}" >
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem">
                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                    <Setter Property="Background" Value="#212740"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Padding" Value="0"/>
                                                    <Setter Property="Margin" Value="0"/>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Button Style="{StaticResource TimeBtn}" Content="{Binding}" FontSize="10" Height="20" Command="{Binding BtnClick, RelativeSource={RelativeSource AncestorType=userControl:DropDownRadioButton}}" CommandParameter="{Binding}"/>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </StackPanel>
                                </Popup>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Background" Value="#25315A"/>
                        <Setter Property="Foreground" Value="#029BFB"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="false">
                        <Setter Property="Background" Value="#171B2B"/>
                        <Setter Property="Foreground" Value="#A2A3AA"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TimeRadio" TargetType="{x:Type RadioButton}">
                <Setter Property="Width" Value="38"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <TextBlock  Text="{TemplateBinding ContentStringFormat}"  FontSize="10" Width="38"  Height="20"  FontFamily="MicrosoftYaHei" TextAlignment="Center"  HorizontalAlignment="Center" Padding="0,5,0,0">
                                <TextBlock.DataContext>
                                    <Binding Path="TimeMenuVM" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                </TextBlock.DataContext>
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Background" Value="#25315A"/>
                        <Setter Property="Foreground" Value="#029BFB"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="false">
                        <Setter Property="Background" Value="#171B2B"/>
                        <Setter Property="Foreground" Value="#A2A3AA"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TimeMenuControl" TargetType="{x:Type UserControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel Width="283" Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <convert:TimeSpanConverter x:Key="TimeSpanCvrt"/>
                                </StackPanel.Resources>
                                <StackPanel.DataContext>
                                    <Binding Path="TimeMenuVM" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                </StackPanel.DataContext>
                                <RadioButton Style="{StaticResource ResourceKey=TimeRadio}" ContentStringFormat="{Binding Path=DataContext.Time, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}},Converter={StaticResource TimeSpanCvrt}}" GroupName="TimeMenu" Command="{Binding InputCmd, RelativeSource={RelativeSource AncestorType=userControl:DropdownMenu}}" CommandParameter="Time"/>
                                <RadioButton Style="{StaticResource ResourceKey=TimeRadio}" ContentStringFormat="{Binding Path=DataContext.OneMin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}},Converter={StaticResource TimeSpanCvrt}}" GroupName="TimeMenu" Command="{Binding InputCmd, RelativeSource={RelativeSource AncestorType=userControl:DropdownMenu}}" CommandParameter="1m" IsChecked="True"/>
                                <RadioButton Style="{StaticResource ResourceKey=TimeRadio}" ContentStringFormat="{Binding Path=DataContext.OneDay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}},Converter={StaticResource TimeSpanCvrt}}" GroupName="TimeMenu" Command="{Binding InputCmd, RelativeSource={RelativeSource AncestorType=userControl:DropdownMenu}}" CommandParameter="1D"/>

                                <!--<userControl:DropDownRadioButton GroupName="TimeMenu" ListDataSoure="{Binding Path=DataContext.MinuteListData, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}},Converter={StaticResource TimeSpanCvrt}}" Style="{StaticResource TimeMenuRadio}" IsChecked="True" Command="{Binding InputCmd, RelativeSource={RelativeSource AncestorType=userControl:DropdownMenu}}"/>-->
                                <!--<userControl:DropDownRadioButton GroupName="TimeMenu" ListDataSoure="{Binding Path=DataContext.HourListData, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}},Converter={StaticResource TimeSpanCvrt}}" Style="{StaticResource TimeMenuRadio}" Command="{Binding InputCmd, RelativeSource={RelativeSource AncestorType=userControl:DropdownMenu}}"/>-->
                                <!--<userControl:DropDownRadioButton GroupName="TimeMenu" ListDataSoure="{Binding Path=DataContext.DayListData, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}},Converter={StaticResource TimeSpanCvrt}}" Style="{StaticResource TimeMenuRadio}" Command="{Binding InputCmd, RelativeSource={RelativeSource AncestorType=userControl:DropdownMenu}}"/>-->
                                <!--<userControl:DropDownRadioButton GroupName="TimeMenu" ListDataSoure="{Binding Path=DataContext.WeekListData, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}},Converter={StaticResource TimeSpanCvrt}}" Style="{StaticResource TimeMenuRadio}" Command="{Binding InputCmd, RelativeSource={RelativeSource AncestorType=userControl:DropdownMenu}}"/>-->
                                <!--<userControl:DropDownRadioButton GroupName="TimeMenu" ListDataSoure="{Binding Path=DataContext.MonthListData, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}},Converter={StaticResource TimeSpanCvrt}}" Style="{StaticResource TimeMenuRadio}" Command="{Binding InputCmd, RelativeSource={RelativeSource AncestorType=userControl:DropdownMenu}}"/>-->
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.Resources>
                            <userControl:StarButtonBackgroundConverter x:Key="starBackgrpoundCoverter" />
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80*"/>
                            <ColumnDefinition Width="15*"/>
                            <ColumnDefinition Width="53*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="1"/>
                            <RowDefinition Height="20" />
                            <RowDefinition Height="1"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid Margin="10,10,10,14" Grid.Row="0" Grid.ColumnSpan="3">
                            <Grid.DataContext>
                                <Binding Path="KLineVM" RelativeSource="{RelativeSource AncestorType=Window}"/>
                            </Grid.DataContext>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="230" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0">
                                <TextBlock  Style="{StaticResource KlineWindowFinfoBarSymbolStyle}" Grid.Column="0"  Text="{Binding SymbolText}" />
                            </Grid>

                            <StackPanel Margin="10,6,10,0" Grid.Column="1">
                                <TextBlock Style="{StaticResource KlineWindowFinfoBarCurrentPriceStyle}" Text="{Binding ClosePrice}" />
                                <!--<TextBlock Style="{StaticResource KlineWindowFinfoBarCurrentLocalPriceStyle}" Text="=955.47CNY" />-->
                            </StackPanel>

                            <Grid Grid.Column="2"  HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Style="{StaticResource KlineWindowFinfoBarInfosHeadStyle}" Grid.Column="0" Text="涨幅" TextAlignment="Center"/>
                                <TextBlock Style="{StaticResource KlineWindowFinfoBarInfosHeadStyle}" Grid.Column="1" Text="最新价" TextAlignment="Center"/>
                                <TextBlock Style="{StaticResource KlineWindowFinfoBarInfosHeadStyle}" Grid.Column="2" Text="最高价" TextAlignment="Center"/>
                                <!--<TextBlock Style="{StaticResource KlineWindowFinfoBarInfosHeadStyle}" Grid.Column="3" Text="24H量" TextAlignment="Center"/>-->

                                <TextBlock Style="{StaticResource KlineWindowFinfoBarInfosBodyStyle}" Grid.Row="1" Grid.Column="0" Text="{Binding AmountOfIncrease}" TextAlignment="Center"/>
                                <TextBlock Style="{StaticResource KlineWindowFinfoBarInfosBodyStyle}" Grid.Row="1" Grid.Column="1" Text="{Binding ClosePrice}" TextAlignment="Center"/>
                                <TextBlock Style="{StaticResource KlineWindowFinfoBarInfosBodyStyle}" Grid.Row="1" Grid.Column="2" Text="{Binding HighPrice}" TextAlignment="Center"/>
                                <!--<TextBlock Style="{StaticResource KlineWindowFinfoBarInfosBodyStyle}" Grid.Row="1" Grid.Column="3" Text="{Binding Volume}" TextAlignment="Center"/>-->

                            </Grid>

                            <Grid VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,10,10,0"  Grid.Column="4">
                                <Grid.DataContext>
                                    <Binding Path="KLineVM" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                </Grid.DataContext>
                                <userControl:StarButton Style="{StaticResource StarBtn}"  Height="12" Width="12" Background="{Binding IsSelfSelect,Converter={StaticResource starBackgrpoundCoverter}}"  StarIsSelfSelect="{Binding IsSelfSelect,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  StarStringContent="{Binding Symbol}"/>
                            </Grid>
                        </Grid>
                        <Border Grid.Row="1" Style="{StaticResource KlineWindowBorderyStyle}" Grid.ColumnSpan="3" />
                        <Grid Grid.Row="2" Grid.ColumnSpan="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="280" />
                                <ColumnDefinition Width="1" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="1" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="1" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="1" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <!--<Border Grid.Column="1" Style="{StaticResource KlineWindowBorderyStyle}" />-->
                            <!--<Border Grid.Column="3" Style="{StaticResource KlineWindowBorderyStyle}" />-->
                            <!--<Border Grid.Column="5" Style="{StaticResource KlineWindowBorderyStyle}" />-->
                            <!--<Border Grid.Column="7" Style="{StaticResource KlineWindowBorderyStyle}" />-->

                            <StackPanel Grid.Column="8" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
                                <!--<RadioButton GroupName="MarketDepthBtn" Style="{StaticResource MarketDepthBtn}" Content="行情图" IsChecked="True" Width="42" Height="16" Margin="0,0,10,0"/>-->
                                <!--<RadioButton GroupName="MarketDepthBtn" Style="{StaticResource MarketDepthBtn}" Content="深度图" Width="42" Height="16"  />-->
                            </StackPanel>

                            <StackPanel Grid.Column="0" Orientation="Horizontal">
                                <userControl:DropdownMenu Style="{StaticResource TimeMenuControl}" TextChangedCommand="{Binding DropdownCommand, RelativeSource={RelativeSource AncestorType=Window}}"/>
                            </StackPanel>
                        </Grid>
                        <Border Grid.Row="3" Style="{StaticResource KlineWindowBorderyStyle}" Grid.ColumnSpan="3" />
                        <Grid Grid.Row="4" Grid.ColumnSpan="3">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0" />
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">
                            </Grid>

                            <Grid Grid.Column="1" >

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="65*"/>
                                    <RowDefinition Height="30*"/>
                                    <RowDefinition Height="5*"/>
                                </Grid.RowDefinitions>

                                <Grid.DataContext>
                                    <Binding Path="KLineVM" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                </Grid.DataContext>
                                <klin:KLine Grid.Row="0"  x:Name="Kline" Proxy="{Binding KlineChartProxy,RelativeSource={RelativeSource AncestorType=Window}}"
                                        YAxisValueRangeAndDataPeakScale="0.001" Margin="15, 10, 45,0" FontSize="12" CandlestickWidth="16"
                                             CandlestickMargin="2" YAxisCoordinateCount="7" AxisBrush="#687288" AxisLabelBrush="#687288" 
                                             ReferenceLineBrush="#1E2232" RiseBrush="#15B78A" FallBrush="#F95155" KlineInfoHeight="132" TextFormat="{Binding TextFormat}"
                                             KlineInfoWidth="160" KlineInfoBorderBrush="#687288" KlineInfoBrush="#5B647A" KlineTextBrush="#FC5153"
                                             KlineInfoFontSize="14" Typeface="{Binding KLineTypeface}" KlineInfoTypeface="{Binding KLineTypeface}" 
                                             SelectRenders="{Binding KLineSelcetRenders}" MoveLeftCmd="{Binding MoveLeftCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                               MoveRightCmd="{Binding MoveRightCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                            ZoomInCmd="{Binding ZoomInCommand,RelativeSource={RelativeSource AncestorType=Window}}" TextBrush="White" 
                                               ZoomOutCmd="{Binding ZoomOutCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                            MouseMoveCmd="{Binding MouseMoveCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                             />

                                <volume:Volume Grid.Row="1" Proxy="{Binding VolumeChartProxy,RelativeSource={RelativeSource AncestorType=Window}}"
                                               YAxisValueRangeAndDataPeakScale="0.001" Margin="15,0,45,5" FontSize="12" VolumeStickWidth="16"
                                                YAxisCoordinateCount="2" AxisBrush="#687288" AxisLabelBrush="#687288" VolumeStickMargin="2"
                                               ReferenceLineBrush="#1E2232" RiseBrush="#15B78A" FallBrush="#F95155" VolumeTextBrush="White"
                                               DateBrush="White" Typeface="{Binding KLineTypeface}" SelectRenders="{Binding VolumeSelcetRenders}" 
                                               MoveLeftCmd="{Binding MoveLeftCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                               TextBrush="White" TextFormat="N2"
                                               MoveRightCmd="{Binding MoveRightCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                               ZoomInCmd="{Binding ZoomInCommand,RelativeSource={RelativeSource AncestorType=Window}}" 
                                               ZoomOutCmd="{Binding ZoomOutCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                               MouseMoveCmd="{Binding MouseMoveCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                               />
                            </Grid>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="750"/>
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Height" Value="650.5"/>
        <!--<Setter Property="MinHeight" Value="300"/>-->
        <!--<Setter Property="MinWidth" Value="600"/>-->
    </Style>
</ResourceDictionary>