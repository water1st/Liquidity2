<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:textBox="clr-namespace:Liquidity2.UI.Components.UsersControl;assembly=Liquidity2.UI.Components"
                    xmlns:groupButton="clr-namespace:Liquidity2.UI.Components.UsersControl.GroupButton;assembly=Liquidity2.UI.Components"
                    xmlns:searchButton="clr-namespace:Liquidity2.UI.Components.UsersControl.SearchButton;assembly=Liquidity2.UI.Components"
                    xmlns:local="clr-namespace:Liquidity2.UI.Core;assembly=Liquidity2.UI.Core">

    <ControlTemplate  x:Key="Window_Template" TargetType="{x:Type local:WindowBase}">
        <ControlTemplate.Resources>
            <!--标题栏样式开始-->
            <Style x:Key="BaseWindowTitleStyle" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="#00010A" />
            </Style>
            <!--标题栏样式结束-->

            <!--窗体主体样式开始-->
            <Style x:Key="BaseWindowBodyStyle" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="#171B2B"/>
            </Style>
            <!--窗体主体样式结束-->

            <!--标题栏文字开始-->
            <Style x:Key="BaseWindowTitleTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Margin" Value="10,0,0,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
            <!--标题栏文字结束-->

            <!--标题栏最小化按钮开始-->
            <Style x:Key="BaseWindowMinimizeButtonStyle" TargetType="{x:Type Button}">
                <!--按钮透明度-->
                <Setter Property="Opacity" Value="0.75" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Black">
                                <!--画布对象，用于画按钮样子，画布长宽均为12像素，所以线段有效x，x坐标为0~12-->
                                <Canvas Width="12" Height="12" Margin="9">
                                    <!--线段对象，最小化按钮一条横线
                            StrokeThickness是线粗像素，Stroke是线条颜色-->
                                    <Line StrokeThickness="2" X1="0" Y1="6" X2="12" Y2="6" Stroke="#FFFFFF" />
                                </Canvas>
                            </Grid>
                            <!--触发事件-->
                            <ControlTemplate.Triggers>
                                <!--鼠标经过高亮-->
                                <Trigger Property="Button.IsMouseOver"  Value="True">
                                    <Setter Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="30" />
                <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>
            <!--标题栏最小化按钮结束-->

            <!--标题栏最大化按钮开始-->
            <Style x:Key="BaseWindowMaximizeButtonStyle" TargetType="{x:Type Button}" >
                <Setter Property="Opacity" Value="0.75"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Black">
                                <!--画布对象，长宽12像素-->
                                <Canvas Width="12" Height="12" Margin="9">
                                    <!--绘制几何路径-->
                                    <Path StrokeThickness="2" Stroke="#FFFFFF">
                                        <Path.Data>
                                            <PathGeometry>
                                                <!--以0，0为起点，各个点连接绘制图形-->
                                                <PathFigure StartPoint="0,0">
                                                    <PolyLineSegment Points="12,0 12,12 0,12 0,0"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Canvas>
                            </Grid>
                            <!--触发事件-->
                            <ControlTemplate.Triggers>
                                <!--鼠标经过高亮-->
                                <Trigger Property="Button.IsMouseOver"  Value="True">
                                    <Setter Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="30" />
                <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>
            <!--标题栏最大化按钮结束-->

            <!--标题栏关闭按钮开始-->
            <Style x:Key="BaseWindowCloseButtonStyle" TargetType="{x:Type Button}">
                <!--按钮透明度-->
                <Setter Property="Opacity" Value="0.75"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Black">
                                <!--画布对象，用于画按钮样子，画布长宽均为12像素，所以线段有效x，x坐标为0~12-->
                                <Canvas Width="12" Height="12" Margin="9">
                                    <!--线段对象，关闭按钮x的两条线，x1，y1是起点坐标，x2，y2是终点坐标
                            StrokeThickness是线粗像素，Stroke是线条颜色-->
                                    <Line StrokeThickness="2" X1="0" Y1="0" X2="12" Y2="12" Stroke="#FFFFFF" />
                                    <Line StrokeThickness="2" X1="0" Y1="12" X2="12" Y2="0" Stroke="#FFFFFF" />
                                </Canvas>
                            </Grid>
                            <!--触发事件-->
                            <ControlTemplate.Triggers>
                                <!--鼠标经过高亮-->
                                <Trigger Property="Button.IsMouseOver"  Value="True">
                                    <Setter Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>
            <!--标题栏关闭按钮结束-->

            <!--标题栏群组联动按钮开始-->
            <Style x:Key="BaseWindowGroupButtonStyle" TargetType="{x:Type Button}" >
                <Setter Property="Opacity" Value="0.75"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="Button">
                            <Grid  Background="Black" >
                                <TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Visibility="{Binding BlockVisibility}" Text="{Binding GroupText}"/>
                                <!--画布对象，由两个扭曲的线条组成-->
                                <Canvas  Width="12" Height="12" Margin="9" Visibility="{Binding CanvasVisibility}">
                                    <Path StrokeThickness="2" Stroke="#FFFFFF">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="8,2">
                                                    <PolyLineSegment Points="8,0 0,0 0,8 8,8 8,6"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="2" Stroke="#FFFFFF">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="4,6">
                                                    <PolyLineSegment Points="4,4 12,4 12,12 4,12 4,10"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Canvas>
                            </Grid>
                            <!--触发事件-->
                            <ControlTemplate.Triggers>
                                <!--鼠标经过高亮-->
                                <Trigger Property="Button.IsMouseOver" Value="true">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="30" />
            </Style>
            <!--标题栏群组联动按钮结束-->

            <!--标题栏搜索按钮开始-->
            <Style x:Key="BaseWindowSearchButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Opacity" Value="0.75"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Black">
                                <Grid  Visibility="{Binding SearchBtnGridVisibility}">
                                    <Canvas  HorizontalAlignment="Right"  Width="12" Height="12" Margin="0,0,9,2">
                                        <Path StrokeThickness="0" Stroke="White">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <PathGeometry FillRule="EvenOdd" Figures="M9.79864501,2.92321005 C7.90017985,1.02383489 4.8215177,1.02383489 2.92228255,2.92321005 C1.02290739,4.82251521 1.02290739,7.90117736 2.92228255,9.79957251 C4.82053771,11.6985977 7.89870986,11.6990177 9.79759502,9.80069251 C9.79801502,9.80041251 9.79836502,9.79999251 9.79871501,9.79957251 C11.6976002,7.90138735 11.6981602,4.8231452 9.79983501,2.92426005 C9.79937621,2.92398749 9.79897258,2.92363134 9.79864501,2.92321005 L9.79864501,2.92321005 Z M1.86367524,10.8582498 C-0.620478428,8.37479614 -0.620968428,4.34756641 1.86248526,1.86348274 C4.34600893,-0.620670928 8.37309866,-0.621230928 10.8572523,1.86229276 C13.341336,4.34581643 13.341896,8.37290616 10.8584423,10.8571298 C10.8580115,10.8574908 10.8576133,10.857889 10.8572523,10.8583198 C8.37358864,13.3412835 4.34733891,13.3412835 1.86367524,10.8582498 Z M13.7443249,13.7452524 C13.4056658,14.0844716 12.8561672,14.0848916 12.5169481,13.7462324 L12.5159681,13.7452524 L11.2885912,12.5169656 C10.9496521,12.1780264 10.9496521,11.6284578 11.2885912,11.2895187 C11.6276004,10.9505796 12.177029,10.9505796 12.5159681,11.2895187 L13.7443249,12.5169656 C14.0836141,12.8542247 14.0850841,13.4026033 13.7477549,13.7418225 C13.7466647,13.7430177 13.7455202,13.7441622 13.7443249,13.7452524 L13.7443249,13.7452524 Z" />
                                                </GeometryGroup>
                                            </Path.Data>
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                    <GradientStop Color="White"/>
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                    </Canvas>
                                </Grid>
                                <textBox:SearchTextBox  Visibility="{Binding SearchControlVisibility, RelativeSource={RelativeSource AncestorType=searchButton:SearchButton}}" InputCmd="{Binding InputCmd, RelativeSource={RelativeSource AncestorType=searchButton:SearchButton}}" InitializationCmd ="{Binding InitializationCmd, RelativeSource={RelativeSource AncestorType=searchButton:SearchButton}}" >
                                    <textBox:SearchTextBox.InputBindings>
                                        <MouseBinding Gesture="LeftClick" Command="{Binding SearchedCmd, RelativeSource={RelativeSource AncestorType=searchButton:SearchButton}}"/>
                                    </textBox:SearchTextBox.InputBindings>
                                </textBox:SearchTextBox>
                            </Grid>
                            <!--触发事件-->
                            <ControlTemplate.Triggers>
                                <!--鼠标经过高亮-->
                                <Trigger Property="Button.IsMouseOver" Value="true">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Height" Value="20" />
            </Style>
            <!--标题栏搜索按钮结束-->
        </ControlTemplate.Resources>

        <Border BorderBrush="{Binding WindowBorderBrush, RelativeSource={RelativeSource AncestorType=Window}}" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--title 开始-->
                <Grid>
                    <Border WindowChrome.IsHitTestVisibleInChrome="True">
                        <Border.InputBindings>
                            <MouseBinding Gesture="LeftClick" Command="{Binding WindowDragMoveCmd}" />
                            <MouseBinding Gesture="LeftDoubleClick" Command="{Binding WindowMaximizeCmd}" />
                        </Border.InputBindings>
                        <Grid Style="{StaticResource BaseWindowTitleStyle}">
                            <TextBlock Text="{Binding Path=Title}" Style="{StaticResource BaseWindowTitleTextStyle}" />
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" VerticalAlignment="Center">
                                <searchButton:SearchButton WindowChrome.IsHitTestVisibleInChrome="True"  Style="{StaticResource BaseWindowSearchButtonStyle}" Visibility="{Binding Path=SearchedBtnVisibility,RelativeSource={RelativeSource AncestorType=Window}}" Command="{Binding WindowSearchedCmd ,RelativeSource={RelativeSource AncestorType=Window}}"/>
                                <groupButton:GroupButton WindowChrome.IsHitTestVisibleInChrome="True" InputWindowType="GroupWindow"  Style="{StaticResource BaseWindowGroupButtonStyle}" Visibility="{Binding GroupBtnVisibility, Mode=OneWay,RelativeSource={RelativeSource AncestorType=Window}}" Command="{Binding DataContext.WindowGroupedCmd,RelativeSource={RelativeSource AncestorType=Window}}"/>
                                <Button WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource BaseWindowMinimizeButtonStyle}">
                                    <Button.InputBindings>
                                        <MouseBinding Gesture="LeftClick" Command="{Binding WindowMinimizeCmd }"/>
                                    </Button.InputBindings>
                                </Button>
                                <Button WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource BaseWindowMaximizeButtonStyle}" >
                                    <Button.InputBindings>
                                        <MouseBinding Gesture="LeftClick" Command="{Binding WindowMaximizeCmd}"/>
                                    </Button.InputBindings>
                                </Button>
                                <Button WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource BaseWindowCloseButtonStyle}">
                                    <Button.InputBindings>
                                        <MouseBinding Gesture="LeftClick" Command="{Binding WindowCloseCmd}"/>
                                    </Button.InputBindings>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
                <!--title结束-->

                <!--内容开始-->
                <Grid Grid.Row="1" Style="{StaticResource ResourceKey=BaseWindowBodyStyle}" Margin="0,-1,0,0">
                    <ContentPresenter/>
                </Grid>
                <!--内容结束-->
            </Grid>
        </Border>
    </ControlTemplate>

    <!--窗体样式开始-->
    <Style x:Key="MainWindow_Style" TargetType="{x:Type Window}">
        <Setter Property="Template" Value="{StaticResource Window_Template}"/>
        <Setter Property="Foreground" Value="White" />
    </Style>
    <!--窗体样式结束-->

</ResourceDictionary>
